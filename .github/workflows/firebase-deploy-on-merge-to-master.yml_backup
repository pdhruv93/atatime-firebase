name: Deploy to Firebase Hosting on merge

on:
  push:
    branches: feature/firebase-setup

jobs:
  check-changes-functions:
    name: Check changes for functions
    runs-on: ubuntu-latest
    permissions: read-all
    steps:
      - uses: actions/checkout@v3

      - uses: dorny/paths-filter@v2
        id: functions-changes
        with:
          base: ${{ github.ref_name }}
          filters: |
            changed:
              - 'functions/**'
              - 'src/shared/**'
    outputs:
      changed: ${{ steps.functions-changes.outputs.changed }}

  check-changes-firestore-rules:
    name: Check changes for firestore rules
    runs-on: ubuntu-latest
    permissions: read-all
    steps:
      - uses: actions/checkout@v3

      - uses: dorny/paths-filter@v2
        id: firestore-rules-changes
        with:
          base: ${{ github.ref_name }}
          filters: |
            changed:
              - 'firestore.rules'
    outputs:
      changed: ${{ steps.firestore-rules-changes.outputs.changed }}

  check-changes-storage:
    name: Check changes for storage rules
    runs-on: ubuntu-latest
    permissions: read-all
    steps:
      - uses: actions/checkout@v3

      - uses: dorny/paths-filter@v2
        id: storage-changes
        with:
          base: ${{ github.ref_name }}
          filters: |
            changed:
              - 'storage.rules'
    outputs:
      changed: ${{ steps.storage-changes.outputs.changed }}

  deploy-functions:
    name: Deploy functions
    needs: check-changes-functions
    if: ${{ needs.check-changes-functions.outputs.changed == 'true' }}
    runs-on: ubuntu-latest
    permissions: write-all
    env:
      PROD_PROJECT_ID: ${{ vars.PROD_FB_PROJECT_ID }}
      PROD_GCP_CREDENTIALS: ${{ secrets.FIREBASE_ADMIN_DEPLOY_SA_PROD }}
    steps:
      - name: Set environment
        run: |
          if [ "$GITHUB_REF" = "refs/heads/prod" ]; then
            echo "PROJECT_ID=${PROD_PROJECT_ID}" >> "$GITHUB_ENV"
            PROD_GCP_CREDENTIALS="${PROD_GCP_CREDENTIALS//$'\n'/' '}"
            echo "GOOGLE_CREDENTIALS=${PROD_GCP_CREDENTIALS}" >> $GITHUB_ENV
          fi

      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.11.0"

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Install dependencies
        run: cd functions && npm i

      - uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ env.GOOGLE_CREDENTIALS }}"

      - name: Build functions
        run: cd functions && CI=false npm run build

      - name: Deploy functions
        run: firebase deploy -f --only functions --project ${{ env.PROJECT_ID }}

  deploy-firestore-rules:
    name: Deploy firestore rules
    needs: check-changes-firestore-rules
    if: ${{ needs.check-changes-firestore-rules.outputs.changed == 'true' }}
    runs-on: ubuntu-latest
    permissions: write-all
    env:
      PROD_PROJECT_ID: ${{ vars.PROD_FB_PROJECT_ID }}
      PROD_GCP_CREDENTIALS: ${{ secrets.FIREBASE_ADMIN_DEPLOY_SA_PROD }}
    steps:
      - name: Set environment
        run: |
          if [ "$GITHUB_REF" = "refs/heads/prod" ]; then
            echo "PROJECT_ID=${PROD_PROJECT_ID}" >> "$GITHUB_ENV"
            PROD_GCP_CREDENTIALS="${PROD_GCP_CREDENTIALS//$'\n'/' '}"
            echo "GOOGLE_CREDENTIALS=${PROD_GCP_CREDENTIALS}" >> $GITHUB_ENV
          fi

      - uses: actions/checkout@v3

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ env.GOOGLE_CREDENTIALS }}"

      - name: Deploy firestore rules
        run: firebase deploy -f --only firestore:rules --project ${{ env.PROJECT_ID }}

  deploy-storage:
    name: Deploy storage
    needs: check-changes-storage
    if: ${{ needs.check-changes-storage.outputs.changed == 'true' }}
    runs-on: ubuntu-latest
    permissions: write-all
    env:
      PROD_PROJECT_ID: ${{ vars.PROD_FB_PROJECT_ID }}
      PROD_GCP_CREDENTIALS: ${{ secrets.FIREBASE_ADMIN_DEPLOY_SA_PROD }}
    steps:
      - name: Set environment
        run: |
          if [ "$GITHUB_REF" = "refs/heads/prod" ]; then
            echo "PROJECT_ID=${PROD_PROJECT_ID}" >> "$GITHUB_ENV"
            PROD_GCP_CREDENTIALS="${PROD_GCP_CREDENTIALS//$'\n'/' '}"
            echo "GOOGLE_CREDENTIALS=${PROD_GCP_CREDENTIALS}" >> $GITHUB_ENV
          fi

      - uses: actions/checkout@v3

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ env.GOOGLE_CREDENTIALS }}"

      - name: Deploy storage
        run: firebase deploy -f --only storage --project ${{ env.PROJECT_ID }}
